name: Deploy ZilRemit Homepage to AWS S3 and CloudFront

on:
  push:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'
  S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Deploy to S3
      run: |
        aws s3 sync ./dist s3://${{ env.S3_BUCKET }} --delete --exact-timestamps
        
    - name: Set S3 bucket policy for static website hosting
      run: |
        aws s3api put-bucket-policy --bucket ${{ env.S3_BUCKET }} --policy '{
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadGetObject",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": "arn:aws:s3:::${{ env.S3_BUCKET }}/*"
            }
          ]
        }'
        
    - name: Configure S3 bucket for static website hosting
      run: |
        aws s3 website s3://${{ env.S3_BUCKET }} --index-document index.html --error-document index.html
        
    - name: Invalidate CloudFront distribution
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
        
    - name: Get deployment URLs
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "üìç S3 Website URL: http://${{ env.S3_BUCKET }}.s3-website-${{ secrets.AWS_REGION }}.amazonaws.com"
        echo "üåê CloudFront URL: https://$(aws cloudfront get-distribution --id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --query 'Distribution.DomainName' --output text)"
